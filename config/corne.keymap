/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        layer-3 {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    macros {
        /**
         * Temporarily switches to a layer (`&mo`) while a modifier is held.
         * Analogous to QMK's `LM()`, using a parameterized macro.
         *
         * Params:
         *  1. Layer to switch to
         *  2. Modifier to press while layer is active
         *
         * Example:
         *  `&lm NUM_LAYER LSHIFT`
         */

        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_2to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER &macro_param_1to1>,
                <&macro_release>,
                <&mo MACRO_PLACEHOLDER>;
        };
    };

    behaviors {
        space_or_num_layer_with_shift: space_or_num_layer_with_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACE_OR_NUM_LAYER_WITH_SHIFT";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&lm 1 LSHIFT>;

            tapping-term-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E     &kp R  &kp T                             &kp Y    &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LSHIFT  &kp A  &kp S  &kp D     &kp F  &kp G                             &kp H    &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z  &kp X  &kp C     &kp V  &kp B                             &kp N    &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp ESC
                          &kp LGUI  &mo 1  &space_or_num_layer_with_shift    &kp RET  &mo 2  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp BSPC
&trans     &trans  &trans  &trans    &trans  &trans       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &kp LSHIFT
&trans     &trans  &trans  &trans    &trans  &trans       &trans    &trans    &trans  &trans     &trans  &trans
                           &kp LGUI  &trans  &kp SPACE    &kp RET   &kp LGUI  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans    &trans  &trans       &trans   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS  &kp EQUAL  &trans
&trans  &trans  &trans  &trans    &trans  &trans       &trans   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans     &trans     &kp BACKSLASH
&trans  &trans  &trans  &trans    &trans  &trans       &trans   &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans     &trans     &trans
                        &kp LGUI  &trans  &kp SPACE    &kp RET  &trans                &trans
            >;
        };

        layer_3 {
            bindings = <
&kp F1      &kp F2      &kp F3      &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &bt BT_PRV  &bt BT_NXT  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&trans      &trans      &trans      &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                                    &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
